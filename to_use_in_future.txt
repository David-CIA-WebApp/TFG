
IN ADD User
'''
    new_user = {
        'nombre': request.json['nombre'],
        'apellidos': request.json['apellidos'],
        'dni': request.json['dni'],
        'email': request.json['email'],
        'direccion': request.json['direccion'],
        'telefono': request.json['telefono']
    }
    users.append(new_user)
    '''






# Update Data Route
@app.route('/users/<string:user_dni>', methods=['PUT'])
def editUser(user_dni):
    usersFound = [user for user in users if user['dni'] == user_dni]
    if (len(usersFound) > 0):
        usersFound[0]['nombre'] = request.json['nombre']
        usersFound[0]['apellidos'] = request.json['apellidos']
        usersFound[0]['dni'] = request.json['dni']
        usersFound[0]['email'] = request.json['email']
        usersFound[0]['direccion'] = request.json['direccion']
        usersFound[0]['telefono'] = request.json['telefono']
        return jsonify({
            'message': 'User Updated',
            'user': usersFound[0]
        })
    return jsonify({'message': 'User Not found'})


# DELETE Data Route
@app.route('/users/<string:user_dni>', methods=['DELETE'])
def deleteUser(user_dni):
    usersFound = [user for user in users if user['dni'] == user_dni]
    if len(usersFound) > 0:
        users.remove(usersFound[0])
        return jsonify({
            'message': 'User Deleted',
            'users': users
        })


@app.route('/deleteUser/<string:user_dni>', methods=['DELETE'])
def deleteUser(user_dni):
    return jsonify({"message": "Usuario borrado correctamente"})

@app.route('/deleteWorker/<string:user_dni>', methods=['DELETE'])
def deleteWorker(user_dni):
    return jsonify({"message": "Trabajador borrado correctamente"})






















    
        try:
            print(i)
            user_n = {
                "id": i[0],
                "nombre": i[1],
                "apellidos": i[2],
                "dni": i[3],
                "email": i[4],
                "direccion": i[5],
                "telefono": i[6],
                "worker_id": i[7],
                "pass": i[8],
                "user_id": i[9],
                "tipo": i[10]
                }
        except:
            pass
        if user_n['dni'] == user_dni:
            res.append(user_n)
    
    cur.execute('DELETE from worker where id = {}'.format(res[0]['worker_id']))
    mysql.connection.commit()
    cur.execute('DELETE from users where id = {}'.format(res[0]['user_id']))
    mysql.connection.commit()















    {
    "pass": "passsssss",
		"dni": "25896314L,
		"tipo": "Perito"
  }








#Edit Users Routes
@app.route('/editUser/<string:user_dni>', methods=['POST'])
def editUsers(user_dni):
    nombre = request.json['nombre']
    apellidos = request.json['apellidos']
    email = request.json['email']
    direccion = request.json['direccion']
    telefono = request.json['telefono']
    
    cur = mysql.connection.cursor()
    cur.execute('SELECT * from users')
    data = cur.fetchall()
    res = []
    for i in data:
        if i[3] == user_dni:
            res.append(i)
    cur.execute('UPDATE users SET nombre = %s, apellidos = %s, dni = %s, email = %s, direccion = %s, telefono = %s where id_persona = %s', (nombre, apellidos, user_dni, email, direccion, telefono, res[0][0]))
    mysql.connection.commit()
    return jsonify({'message': "Usuario editado correctamente"})


#Edit Workers Routes
@app.route('/editWorker/<string:user_dni>', methods=['POST'])
def editWorkers(user_dni):
    passswd = request.json['pass']
    print(user_dni)
    return jsonify({'message': "Trabajador editado correctamente"})